<?xml version="1.0" encoding="UTF-8"?>
<task id="setup-supabase-auth" version="1.0">
    <metadata>
        <title>Setup Supabase Authentication Configuration</title>
        <description>Configure Supabase client and authentication providers for the project, including environment setup and basic connection testing</description>
        <status>em-andamento</status>
        <progress>0/5</progress>
    </metadata>
    
    <context>
        <area>fullstack</area>
        <technology main="React" version="18+"/>
        <dependencies>
            <lib>@supabase/supabase-js</lib>
            <lib>@supabase/auth-helpers-react</lib>
            <lib>@supabase/auth-helpers-nextjs</lib>
        </dependencies>
        <files>
            <file type="creation" required="true">src/lib/supabase.ts</file>
            <file type="creation" required="true">src/providers/AuthProvider.tsx</file>
            <file type="modification" required="true">.env.local</file>
            <file type="modification" required="true">.env.example</file>
            <file type="creation" required="true">src/hooks/useAuth.ts</file>
        </files>
    </context>
    
    <steps>
        <step id="step001" order="1" completed="false" required="true">
            <title>Install Supabase dependencies</title>
            <description>Install required Supabase packages and auth helpers for React/Next.js integration</description>
            <criteria>
                <criterion>@supabase/supabase-js installed and in package.json</criterion>
                <criterion>@supabase/auth-helpers-react installed</criterion>
                <criterion>@supabase/auth-helpers-nextjs installed (if using Next.js)</criterion>
                <criterion>No installation errors in terminal</criterion>
            </criteria>
            <files>
                <file type="modification" required="true">package.json</file>
            </files>
        </step>
        
        <step id="step002" order="2" completed="false" required="true" depends-on="step001">
            <title>Configure environment variables</title>
            <description>Setup Supabase project URL and anon key in environment configuration files</description>
            <criteria>
                <criterion>NEXT_PUBLIC_SUPABASE_URL added to .env.local</criterion>
                <criterion>NEXT_PUBLIC_SUPABASE_ANON_KEY added to .env.local</criterion>
                <criterion>Both variables added to .env.example with placeholder values</criterion>
                <criterion>Environment variables follow Next.js naming conventions</criterion>
            </criteria>
            <files>
                <file type="modification" required="true">.env.local</file>
                <file type="modification" required="true">.env.example</file>
            </files>
        </step>
        
        <step id="step003" order="3" completed="false" required="true" depends-on="step002">
            <title>Create Supabase client configuration</title>
            <description>Initialize Supabase client with proper configuration and export for app-wide usage</description>
            <criteria>
                <criterion>Supabase client created with createClient function</criterion>
                <criterion>Environment variables properly accessed</criterion>
                <criterion>Client configuration includes auth settings</criterion>
                <criterion>TypeScript types properly imported</criterion>
                <criterion>File exports client for reuse across app</criterion>
            </criteria>
            <files>
                <file type="creation" required="true">src/lib/supabase.ts</file>
            </files>
        </step>
        
        <step id="step004" order="4" completed="false" required="true" depends-on="step003">
            <title>Create authentication provider</title>
            <description>Setup React context provider for authentication state management across the application</description>
            <criteria>
                <criterion>AuthProvider component created with Context API</criterion>
                <criterion>Authentication state management implemented</criterion>
                <criterion>Login, logout, and signup functions available</criterion>
                <criterion>User session state properly tracked</criterion>
                <criterion>Provider properly typed with TypeScript</criterion>
            </criteria>
            <files>
                <file type="creation" required="true">src/providers/AuthProvider.tsx</file>
            </files>
        </step>
        
        <step id="step005" order="5" completed="false" required="true" depends-on="step004">
            <title>Create authentication hook</title>
            <description>Implement custom hook for easy access to authentication functionality in components</description>
            <criteria>
                <criterion>useAuth hook created and properly typed</criterion>
                <criterion>Hook provides access to user state and auth functions</criterion>
                <criterion>Error handling for authentication failures</criterion>
                <criterion>Loading states properly managed</criterion>
                <criterion>Hook integrates with AuthProvider context</criterion>
            </criteria>
            <files>
                <file type="creation" required="true">src/hooks/useAuth.ts</file>
            </files>
            <validation>
                <command>npm run build</command>
                <metric>Build succeeds without errors</metric>
                <metric>TypeScript compilation passes</metric>
            </validation>
        </step>
    </steps>
    
    <validation>
        <checklist>
            <item>All required steps completed</item>
            <item>All required files created</item>
            <item>Code compiles without errors</item>
            <item>No linting warnings</item>
            <item>Supabase client can connect to project</item>
            <item>Environment variables properly configured</item>
            <item>Authentication provider works without errors</item>
        </checklist>
    </validation>
</task>
